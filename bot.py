from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters

TOKEN = '7787447891:AAGfAjuILNV-Pkys7D37rTiOsHwjHbfeKWE'  # ‚Üê –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
ADMIN_ID = 7534482541          # ‚Üê –í—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram user ID

active_users = set()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ —Å–¥–∞—á–µ WhatsApp!\n\n"
        "üìã –¢–∞—Ä–∏—Ñ—ã:\n"
        "1 —á–∞—Å ‚Äî 7$\n"
        "2 —á–∞—Å–∞ ‚Äî 14$\n"
        "3 —á–∞—Å–∞ ‚Äî 24$\n"
        "4 —á–∞—Å–∞ ‚Äî 36$\n"
        "5 —á–∞—Å–æ–≤ ‚Äî 48$\n"
        "6 —á–∞—Å–æ–≤ ‚Äî 54$\n"
        "7 —á–∞—Å–æ–≤ ‚Äî 66$\n"
        "8 —á–∞—Å–æ–≤ ‚Äî 73$\n"
        "9 —á–∞—Å–æ–≤ ‚Äî 79$\n"
        "10 —á–∞—Å–æ–≤ ‚Äî 90$\n"
        "1 –º–∏–Ω—É—Ç–∞ ‚Äî 0.1$\n"
        "20 –º–∏–Ω—É—Ç ‚Äî 5$ (–±–µ–∑ —Ö–æ–ª–¥)"
    )

    keyboard = [
        [InlineKeyboardButton("üì≤ –°–¥–∞—á–∞ WhatsApp", callback_data="whatsapp")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(message, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ /start
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    user = query.from_user
    await query.answer()

    if data == "whatsapp":
        active_users.add(user.id)
        await query.edit_message_text("‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è —Å–¥–∞—á–∏ WhatsApp.\n\n–ù–∞–ø–∏—à–∏—Ç–µ `/cancel`, —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å.")
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"üîî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.username or '–ë–µ–∑ username'} (ID: {user.id}) –Ω–∞–∂–∞–ª –°–¥–∞—á–∞ WhatsApp"
        )

    elif data == "info":
        info_text = (
            "‚ÑπÔ∏è –ú—ã –±–µ—Ä—ë–º –í–∞—à WhatsApp –¥–ª—è —Ä–µ–∫–ª–∞–º—ã!\n"
            "üíº –í—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –Ω–æ–º–µ—Ä, –∞ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –≤ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ü–µ–ª—è—Ö.\n"
            "üí∞ –ó–∞ —ç—Ç–æ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ–ø–ª–∞—Ç—É –ø–æ —Ç–∞—Ä–∏—Ñ—É ‚Äî –≤—Å—ë –ø—Ä–æ–∑—Ä–∞—á–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ!\n"
            "‚ùóÔ∏è–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!"
        )
        await query.edit_message_text(info_text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö
async def handle_user_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if user.id in active_users:
        text = update.message.text
        username = user.username or "–ë–µ–∑ username"
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username} (ID: {user.id}):\n{text}"
        )

# –ö–æ–º–∞–Ω–¥–∞ /cancel
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if user.id in active_users:
        active_users.remove(user.id)
        await update.message.reply_text("üö´ –†–µ–∂–∏–º —Å–¥–∞—á–∏ WhatsApp –∑–∞–≤–µ—Ä—à—ë–Ω.")
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.username or '–ë–µ–∑ username'} –∑–∞–≤–µ—Ä—à–∏–ª –ø–µ—Ä–µ–¥–∞—á—É –Ω–æ–º–µ—Ä–∞."
        )
    else:
        await update.message.reply_text("‚ÑπÔ∏è –í—ã –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ–∂–∏–º –ø–µ—Ä–µ–¥–∞—á–∏.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("cancel", cancel))
    app.add_handler(CallbackQueryHandler(handle_buttons))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_user_message))

    app.run_polling()

if __name__ == '__main__':
    main()
